import os

Import("env")

CURRENT_PROJECT = "trace-replay"

current_env = env.Clone()

current_env.Append(
    CFLAGS=["-D_LARGEFILE_SOURCE", "-D_FILE_OFFSET_BITS=64", "-D_GNU_SOURCE"]
)
current_env.Append(CPPPATH=[env["INCLUDE_LOCATION"]])
current_env.Append(LDFLAGS=["-lpthread", "-laio", "-lrt"])
current_env.Append(LIBS=["aio", "rt", "pthread"])

program = current_env.Program(
    target=env["PROGRAM_LOCATION"] + "/" + CURRENT_PROJECT, source=Glob("*.c")
)

shared_env = current_env.Clone()
shared_env.Append(CFLAGS=["-DUNIT_TEST"])

share = shared_env.SharedLibrary(
    target=env["PROGRAM_LOCATION"] + "/" + CURRENT_PROJECT + ".so", source=Glob("*.c")
)

current_env.Install('/usr/bin', program)
current_env.Alias('install', '/usr/bin')

if current_env["BUILD_UNIT_TEST"] == True:
	tester = SConscript("test/SConscript")
	test_alias = Alias("test", [tester, share, program], tester[0].path)
	AlwaysBuild(test_alias)
