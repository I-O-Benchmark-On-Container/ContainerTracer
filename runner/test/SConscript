import os

Import("env")

CURRENT_PROJECT = "runner-test"

current_env = env.Clone()
current_env.Append(CPPPATH=[env["INCLUDE_LOCATION"]])
current_env.Append(LIBS=["json-c", "jemalloc"])

TRACE_REPLAY_CFLAGS = ["-D_LARGEFILE_SOURCE", "-D_FILE_OFFSET_BITS=64", "-D_GNU_SOURCE"]
RUNNER_CFLAGS = ["-I/usr/include/json-c/"]
if env["DEBUG"] == True:
	DEBUG_CFLAGS = ["-g", "-pg"]
else:
	DEBUG_CFLAGS = []
current_env.Append(CFLAGS= TRACE_REPLAY_CFLAGS + RUNNER_CFLAGS)

object = current_env.Object(Glob("*.c") + Glob("driver/*/*.c"))

exclude_files = [str(Dir(env["RUNNER_LOCATION"])) + os.sep + "main.o"]
except_main = [
    x for x in Glob(env["RUNNER_LOCATION"] + "/*.o") if not str(x) in exclude_files
]

program = current_env.Program(
    target=env["PROGRAM_LOCATION"] + "/" + CURRENT_PROJECT,
    source=Glob("*.o") + Glob(env["RUNNER_LOCATION"] + "/driver/*/*.o") + Glob(env["UNITY_LOCATION"] + "/*.o") + except_main,
)

test_alias = Alias("test", [program], program[0].path)
AlwaysBuild(test_alias)
