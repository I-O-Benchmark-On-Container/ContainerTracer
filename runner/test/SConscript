import os

Import("env")

UNIT_TEST_FILE_NAMES = [str(x).strip(".c") for x in Glob("*.c")]

current_env = env.Clone()
current_env.Append(CPPPATH=[env["INCLUDE_LOCATION"]])
current_env.Append(LIBS=["json-c", "jemalloc"])

TRACE_REPLAY_CFLAGS = ["-D_LARGEFILE_SOURCE", "-D_FILE_OFFSET_BITS=64", "-D_GNU_SOURCE"]
RUNNER_CFLAGS = ["-I/usr/include/json-c/"]
if env["DEBUG"] == True:
    DEBUG_CFLAGS = ["-g", "-pg"]
else:
    DEBUG_CFLAGS = []
current_env.Append(CFLAGS=TRACE_REPLAY_CFLAGS + RUNNER_CFLAGS)

object = current_env.Object(Glob("*.c") + Glob("driver/*/*.c"))

exclude_files = [str(Dir(env["RUNNER_LOCATION"])) + os.sep + "main.os"]
except_main = [
    x for x in Glob(env["RUNNER_LOCATION"] + "/*.os") if not str(x) in exclude_files
]

tester = {}
test_program = {}

for name in UNIT_TEST_FILE_NAMES:
    test_program[name] = current_env.Program(
        target=env["PROGRAM_LOCATION"] + "/" + name,
        source=["{}.o".format(name)]
        + Glob(env["RUNNER_LOCATION"] + "/driver/*/*.os")
        + Glob(env["UNITY_LOCATION"] + "/*.o")
        + except_main,
    )

tester["unit_test_target"] = []
for program in test_program.values():
    tester["unit_test_target"] += [program[0].path]
tester["program_list"] = list(test_program.values())

Return("tester")
